{"version":3,"sources":["components/Card/Card.js","services/dowloadPokemon.js","components/NavBar/NavBar.js","services/SearchApi.js","App.js","reportWebVitals.js","index.js"],"names":["Card","dataState","data","className","name","exp","alt","src","img","onClick","e","undefined","alert","contenidoEnBlob","reader","FileReader","onload","event","save","document","createElement","href","target","result","download","clicEvent","MouseEvent","window","dispatchEvent","URL","webkitURL","revokeObjectURL","readAsDataURL","descargarArchivo","texto","push","order","type","size","attack","hp","defe","Blob","generarTexto","handleText","NavBar","useState","searchState","setSearchState","pokeDataState","setPokeDataState","handleSearch","eve","a","preventDefault","pokeName","fetch","method","headers","body","JSON","stringify","then","res","json","respuesta","pokeData","HandleError","Pokedata","base_experience","types","height","stats","base_stat","sprites","other","dream_world","front_default","location","reload","onSubmit","autoComplete","value","onChange","search","toLowerCase","placeholder","required","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3effbb21.chunk.js","sourcesContent":["import './Card.css'\r\nimport handleText from '../../services/dowloadPokemon'\r\n\r\nexport default function Card({data}){\r\n\r\n    const [dataState] = ([data])\r\n\r\n    return <>\r\n        <div className='card-container'>\r\n            <div className='card'>\r\n                <strong className='name'>{dataState.name}</strong> <p>Exp: {dataState.exp}</p>\r\n                <div className='imgPoke'>\r\n                    \r\n                    <img alt=\"Imagen Pokemon\" src={dataState.img || '/img/pokemon4.png'}/>\r\n                    <button onClick={(e)=>{handleText(dataState)}}  className='descargar'>{dataState.name || 'Busca el Pokemon para Descargarlo' } </button>\r\n                </div>\r\n                <div className='dataPoke'>\r\n                    <div className='pokedexOrder'>\r\n                        <strong className='order'>#{dataState.order || \"Order Pokedex\"}</strong>\r\n                        <strong className='type' >{dataState.type || \"Type Pokemon\"}</strong>\r\n                    </div>\r\n                    <div className='atributos'>\r\n                        <p>Size <br/> {dataState.size}</p>\r\n                    \r\n                        <p>Hp <br/> {dataState.hp}</p>\r\n                        <p>Attack <br/> {dataState.attack}</p>\r\n                        <p>Defends <br/> {dataState.defe}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </>\r\n}","\r\n\r\nexport default function handleText (data){\r\n\r\n\r\n    if(data.name === undefined){\r\n        alert('Busca un Pokemon para poder Descargarlo')\r\n    }else{\r\n\r\n        //crear el archivo de texto\r\n        function descargarArchivo(contenidoEnBlob) {\r\n            var reader = new FileReader();\r\n            reader.onload = function (event) {\r\n                var save = document.createElement('a');\r\n                save.href = event.target.result;\r\n                save.target = '_blank';\r\n                save.download = data.name || 'o.txt';\r\n                var clicEvent = new MouseEvent('click', {\r\n                    'view': window,\r\n                        'bubbles': true,\r\n                        'cancelable': true\r\n                });\r\n        \r\n                save.dispatchEvent(clicEvent);\r\n                (window.URL || window.webkitURL).revokeObjectURL(save.href);\r\n            };\r\n                reader.readAsDataURL(contenidoEnBlob);\r\n            };\r\n            \r\n              //llena el array con los datos que iran dentro del objeto\r\n                function generarTexto(data) {\r\n                    var texto = [];\r\n            \r\n                texto.push(`Datos de ${data.name}\\n`);\r\n                texto.push('Nombre: ');\r\n                texto.push(data.name);\r\n                texto.push('\\n');\r\n                texto.push('Orden en la Pokedex: ');\r\n                texto.push(data.order);\r\n                texto.push('\\n');\r\n                texto.push('Experiencia:');\r\n                texto.push(data.exp);\r\n                texto.push('\\n');\r\n                texto.push('Typo:');\r\n                texto.push(data.type);\r\n                texto.push('\\n');\r\n                texto.push('Altura:');\r\n                texto.push(data.size);\r\n                texto.push('\\n');\r\n                texto.push('Ataque:');\r\n                texto.push(data.attack);\r\n                texto.push('\\n');\r\n                texto.push('Hp:');\r\n                texto.push(data.hp);\r\n                texto.push('\\n');\r\n                texto.push('Defensa:');\r\n                texto.push(data.defe);\r\n                return new Blob(texto, {\r\n                    type: 'text/plain'\r\n                });\r\n                }\r\n        \r\n            //funcion para ejecutar la descargar al hacer click\r\n                descargarArchivo(generarTexto(data, data.name))\r\n        \r\n    }\r\n}","import React, {useState} from \"react\"\r\n\r\nimport SearchApi from '../../services/SearchApi'\r\nimport Card from '../Card/Card'\r\n\r\nimport './Header.css'\r\n\r\nexport default function NavBar(){\r\n\r\n    const [searchState, setSearchState] = useState([])\r\n    const [pokeDataState, setPokeDataState] = useState([])\r\n        \r\n    const handleSearch = async (eve)=>{\r\n        eve.preventDefault()\r\n        \r\n            await SearchApi (searchState)\r\n            .then(pokeData =>{\r\n                \r\n                if (pokeData.HandleError != null) {\r\n                    alert('Debes escribir el nombre del Pokemon de forma correcta')\r\n                }else{\r\n                    setPokeDataState({\r\n                        name: pokeData.Pokedata.name,\r\n                        exp: pokeData.Pokedata.base_experience,\r\n                        order: pokeData.Pokedata.order,\r\n                        type: pokeData.Pokedata.types[0].type.name,\r\n                        size: pokeData.Pokedata.height,\r\n                        hp: pokeData.Pokedata.stats[0].base_stat,\r\n                        attack: pokeData.Pokedata.stats[1].base_stat,\r\n                        defe: pokeData.Pokedata.stats[2].base_stat,\r\n                        img: pokeData.Pokedata.sprites.other.dream_world.front_default\r\n                    });\r\n            }\r\n            })\r\n\r\n            setSearchState('')\r\n    }\r\n    \r\n    //toma los datos del input\r\n    const handleChange = (eve)=>{\r\n        const search = eve.target.value;\r\n        setSearchState(search.toLowerCase())\r\n    }\r\n\r\n    //restart app\r\n    const restart = ()=>{\r\n        window.location.reload()\r\n    }\r\n\r\n    return <>\r\n    <header className=\"header\">\r\n        <nav>\r\n            <ul>\r\n\r\n                <div className='home'>\r\n                    <li onClick={restart}>HOME</li>\r\n                </div>\r\n                <form onSubmit={handleSearch} autoComplete='off'>\r\n                    <input type='search' name='pokeName' value={searchState} onChange={handleChange} placeholder=\"Busca tu Pokemon Favorito\" required ={true}/>\r\n                    <button type=\"submit\">Enviar</button>\r\n                </form>\r\n            </ul>\r\n        </nav>\r\n    </header>\r\n\r\n    <Card data={pokeDataState}/>\r\n    </>\r\n}","export default function SearchApi(pokeName){\r\n\r\n//    const api = `https://pokeapi.co/api/v2/pokemon/${pokeName}`\r\n\r\n    return fetch('/api/PokeApi',{\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'},\r\n        body: JSON.stringify({pokeName})\r\n    })\r\n    .then(res => res.json())\r\n    .then(respuesta =>{\r\n        //console.log(respuesta);\r\n        return respuesta\r\n    })\r\n}","import React from 'react'\n\nimport NavBar from './components/NavBar/NavBar'\n\nfunction App(){\n\n  //aqui estaba el handleChange\n\n\n  //maneja la descarga del texto\n    /* handleText(e){\n      const datos = this.state.pokemon\n      const type = this.state.type\n      const attack = this.state.attack\n      const defe = this.state.defe\n      const hp = this.state.hp\n  \n        //crear el archivo de texto\n\n        function descargarArchivo(contenidoEnBlob) {\n          var reader = new FileReader();\n          reader.onload = function (event) {\n              var save = document.createElement('a');\n              save.href = event.target.result;\n              save.target = '_blank';\n              save.download = datos.name || 'o.txt';\n              var clicEvent = new MouseEvent('click', {\n                  'view': window,\n                      'bubbles': true,\n                      'cancelable': true\n              });\n\n              console.log(datos.name);\n              save.dispatchEvent(clicEvent);\n              (window.URL || window.webkitURL).revokeObjectURL(save.href);\n          };\n          reader.readAsDataURL(contenidoEnBlob);\n      };\n      \n        //llena el array con los datos que iran dentro del objeto\n        function generarTexto(datos) {\n            var texto = [];\n      \n          texto.push(`Datos de ${datos.name}\\n`);\n          texto.push('Nombre: ');\n          texto.push(datos.name);\n          texto.push('\\n');\n          texto.push('Orden en la Pokedex: ');\n          texto.push(datos.order);\n          texto.push('\\n');\n          texto.push('Experiencia:');\n          texto.push(datos.base_experience);\n          texto.push('\\n');\n          texto.push('Typo:');\n          texto.push(type);\n          texto.push('\\n');\n          texto.push('Altura:');\n          texto.push(datos.height);\n          texto.push('\\n');\n          texto.push('Ataque:');\n          texto.push(attack);\n          texto.push('\\n');\n          texto.push('Hp:');\n          texto.push(hp);\n          texto.push('\\n');\n          texto.push('Defensa:');\n          texto.push(defe);\n          return new Blob(texto, {\n              type: 'text/plain'\n          });\n        }\n\n      //funcion para ejecutar la descargar al hacer click\n          descargarArchivo(generarTexto(datos, datos.name))\n      \n    } */\n\n\n    return(\n      //codigo Html que llama a las funciones\n      <div>\n\n        {/* aqui estaba el NavBar */}\n        <NavBar/>\n\n        {/* aqui va el card */}\n\n      </div>\n    )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}